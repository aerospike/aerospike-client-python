name: 'Wait for Aerospike server to start'
inputs:
  container-name:
    required: true
  is-security-enabled:
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
  - name: 'macOS: install timeout command'
    if: ${{ runner.os == 'macOS' }}
    run: brew install coreutils

  # Composite actions doesn't support step-level timeout-minutes
  # Use timeout command and store polling script in file to make easier to read
  # Call bash shell explicitly since timeout uses "sh" shell by default, for some reason
  - name: Wait for EE server to start
    run: timeout 30 bash ./.github/workflows/wait-for-as-server-to-start.bash ${{ inputs.container-name }} ${{ inputs.is-security-enabled }}
    shell: bash
