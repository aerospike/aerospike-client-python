name: 'Wait for Aerospike server (default base image) to start'
# The custom Docker image with EE features enabled does not use this action.
description: Only tested on Linux and macOS
inputs:
  container-name:
    required: true
    description: Server container name

runs:
  using: "composite"
  steps:
  - name: 'macOS: install timeout command'
    if: ${{ runner.os == 'macOS' }}
    run: brew install coreutils
    shell: bash

  # There is no healthcheck by default in the server Docker image,
  # and we use the default image for community edition.
  # We can just reuse our wait script because the CE server should be ready after it finishes.
  - name: Wait for EE server to start
    # Composite actions doesn't support step-level timeout-minutes, so we use timeout command.
    # Call bash shell explicitly since timeout uses "sh" shell by default, for some reason
    run: timeout 30s bash wait-for-as-server-to-start.bash
    working-directory: .github/workflows/docker-build-context
    shell: bash
