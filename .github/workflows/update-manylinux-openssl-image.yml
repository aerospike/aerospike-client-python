on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 17 * * 1-5'
  workflow_dispatch:

jobs:
  main:
    env:
      # We want granular control over the openssl version bundled with our wheels
      OPENSSL_VERSION: '3.0.15'
      REGISTRY: ghcr.io
    strategy:
      matrix:
        arch-and-runner-os: [
          [x86_64, ubuntu-24.04],
          [aarch64, aerospike_arm_runners_2]
        ]
      fail-fast: false

    runs-on: ${{ matrix.arch-and-runner-os[1] }}
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          .github/workflows

    - run: docker pull quay.io/pypa/manylinux2014_${{ matrix.arch-and-runner-os[0] }}

    - uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/metadata-action@v5
      id: meta
      with:
        images: ${{ env.REGISTRY }}/aerospike/manylinux2014_${{ matrix.arch-and-runner-os[0] }}

    - name: Set up Docker Buildx so we can cache our Docker image layers
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        # Don't want to use default Git context or else it will clone the whole Python client repo again
        context: .github/workflows
        file: .github/workflows/manylinux2014-openssl.Dockerfile
        build-args: |
          OPENSSL_VERSION=${{ env.OPENSSL_VERSION }}
          CPU_ARCH=${{ matrix.arch-and-runner-os[0] }}
        # setup-buildx-action configures Docker to use the docker-container build driver
        # This driver doesn't publish an image locally by default
        # so we have to manually enable it
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Also cache intermediate layers to make development faster
        cache-from: type=gha
        cache-to: type=gha,mode=max
