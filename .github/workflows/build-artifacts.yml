name: Build artifacts
run-name: Build artifacts (run_tests=${{ inputs.run_tests }}, use-server-rc=${{ inputs.use-server-rc }}, server-tag=${{ inputs.server-tag }})

# Builds manylinux wheels and source distribution
# Optionally run tests on manylinux wheels
# Then upload artifacts to Github

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: "Run integration tests with the wheels after building them"
        required: true
        type: boolean
        default: false
      use-server-rc:
        type: boolean
        required: true
        default: false
        description: 'Test against server release candidate? (e.g to test new server features)'
      server-tag:
        type: string
        required: true
        default: 'latest'
        description: 'Server docker image tag (e.g to test a client backport version)'

  workflow_call:
    inputs:
      # The "dev" tests test the artifacts against a server
      # The dev-to-stage and stage-to-master workflow only need to build the artifacts, not test them
      run_tests:
        required: false
        type: boolean
        default: false
      # workflow_call hack
      is_workflow_call:
        type: boolean
        default: true
        required: false
      # This input is only used in workflow_call events
      sha-to-build-and-test:
        description: A calling workflow may want to run this workflow on a different ref than the calling workflow's ref
        type: string
        # Make it required to make things simple
        required: true
      # A calling workflow doesn't actually set values to the inputs below
      # But that workflow needs to have default values for these inputs
      use-server-rc:
        required: false
        default: false
        type: boolean
      server-tag:
        type: string
        required: false
        default: 'latest'
    secrets:
      DOCKER_HUB_BOT_USERNAME:
        required: true
      DOCKER_HUB_BOT_PW:
        required: true
      MAC_M1_SELF_HOSTED_RUNNER_PW:
        required: true

jobs:
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04
    env:
      COMMIT_SHA_TO_BUILD: ${{ inputs.is_workflow_call == true && inputs.sha-to-build-and-test || github.sha }}
    steps:
    - name: Create status check message
      run: echo STATUS_CHECK_MESSAGE="Build artifacts (sdist)" >> $GITHUB_ENV
      shell: bash

    - name: Show job status for commit
      # Commit status will already be shown by the calling workflow for push and pull request events, but not
      # for any other event like workflow_dispatch. so we have to do it manually
      # If workflow_call triggered this job, github.event_name will inherit the event of the calling workflow
      # The calling workflow can be triggered by push or pull request events, so there's that
      # https://github.com/actions/runner/issues/3146#issuecomment-2000017097
      if: ${{ github.event_name != 'push' && github.event_name != 'pull_request' }}
      uses: myrotvorets/set-commit-status-action@v2.0.0
      with:
        sha: ${{ env.COMMIT_SHA_TO_BUILD }}
        context: ${{ env.STATUS_CHECK_MESSAGE }}

    - uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: ${{ env.COMMIT_SHA_TO_BUILD }}
        fetch-depth: 0

    - name: Install build dependencies (pip packages)
      run: python3 -m pip install -r requirements.txt

    - name: Build source distribution
      run: python3 -m build --sdist

    - name: Upload source distribution to GitHub
      uses: actions/upload-artifact@v4
      with:
        path: ./dist/*.tar.gz
        name: sdist.build

    - name: Set final commit status
      uses: myrotvorets/set-commit-status-action@v2.0.0
      # Always run even if job failed or is cancelled
      # But we don't want to show anything if the calling workflow was triggered by these events
      if: ${{ always() && github.event_name != 'push' && github.event_name != 'pull_request' }}
      with:
        sha: ${{ env.COMMIT_SHA_TO_BUILD }}
        status: ${{ job.status }}
        context: ${{ env.STATUS_CHECK_MESSAGE }}

  build-wheels:
    strategy:
      matrix:
        platform-tag-and-runner-os: [
          ["manylinux_x86_64", "ubuntu-22.04"],
          ["manylinux_aarch64", "aerospike_arm_runners_2"],
          ["macosx_x86_64", "macos-12-large"],
          ["macosx_arm64", "macos-14"],
          ["win_amd64", "windows-2022"]
        ]
      fail-fast: false
    uses: ./.github/workflows/build-wheels.yml
    with:
      platform-tag: ${{ matrix.platform-tag-and-runner-os[0] }}
      runner-os: ${{ matrix.platform-tag-and-runner-os[1] }}
      # Can't use env context here, so just copy from build-sdist env var
      sha-to-build-and-test: ${{ inputs.is_workflow_call == true && inputs.sha-to-build-and-test || github.sha }}
      run_tests: ${{ inputs.run_tests }}
      use-server-rc: ${{ inputs.use-server-rc }}
      server-tag: ${{ inputs.server-tag }}
    secrets: inherit
