name: Build artifacts
run-name: Build artifacts (run_tests=${{ inputs.run_tests }}, use-server-rc=${{ inputs.use-server-rc }}, server-tag=${{ inputs.server-tag }})

# Builds manylinux wheels and source distribution
# Optionally run tests on manylinux wheels
# Then upload artifacts to Github

on:
  workflow_dispatch:
    inputs:
      # If we only want to check that the wheels pass testing on an arbitrary branch
      run_tests:
        description: "Run integration tests"
        required: true
        type: boolean
        default: false
      use-server-rc:
        type: boolean
        required: true
        default: false
        description: 'Test against server release candidate?'
      # If we are creating a backport and want to test an arbitrary branch against an older server version
      server-tag:
        required: true
        default: 'latest'
        description: 'Server docker image tag'

  workflow_call:
    inputs:
      # The "dev" tests test the artifacts against a server release
      # The dev-to-stage and stage-to-master workflow only need to build the artifacts, not test them
      run_tests:
        description: "Run integration tests"
        required: false
        type: boolean
        default: false
      sha-to-build-and-test-override:
        type: string
        required: false
      # Calling workflow doesn't actually use the options below
      # But we need to set default values for workflow calls to use
      use-server-rc:
        required: false
        default: true
        type: boolean
      server-tag:
        type: string
        required: false
        default: 'latest'
      is_workflow_call:
        type: boolean
        default: true
        required: false
    secrets:
      DOCKER_HUB_BOT_USERNAME:
        required: false
      DOCKER_HUB_BOT_PW:
        required: false
      MAC_M1_SELF_HOSTED_RUNNER_PW:
        required: false

jobs:
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04
    steps:
    - name: Show job status for commit
      # If workflow_call triggered this job, github.event_name will inherit the event of the calling workflow
      # https://github.com/actions/runner/issues/3146#issuecomment-2000017097
      # Commit status will already be shown by the calling workflow for these events
      if: ${{ github.event_name != 'push' && github.event_name != 'pull_request' }}
      uses: myrotvorets/set-commit-status-action@v2.0.0
      with:
        sha: ${{ github.sha }}
        context: "Build wheels (sdist)"

    - uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: ${{ inputs.ref }}
        fetch-depth: 0

    - name: Install build dependencies (pip packages)
      run: python3 -m pip install -r requirements.txt

    - name: Build source distribution
      run: python3 -m build --sdist

    - name: Upload source distribution to GitHub
      uses: actions/upload-artifact@v4
      with:
        path: ./dist/*.tar.gz
        name: sdist.build

    - name: Set final commit status
      uses: myrotvorets/set-commit-status-action@v2.0.0
      # Always run even if job failed or is cancelled
      # But we don't want to show anything if the calling workflow was triggered by these events
      if: ${{ always() && github.event_name != 'push' && github.event_name != 'pull_request' }}
      with:
        sha: ${{ github.sha }}
        status: ${{ job.status }}
        context: "Build wheels (sdist)"

  # We use separate jobs for macOS ARM64 and Windows
  # Because when we test wheels for those two platforms, we want to check that only the builds for those respective
  # platforms passed.
  # For now, we cannot consolidate all the builds into one job because matrix outputs are not a feature yet

  manylinux-and-macOS-x86:
    strategy:
      matrix:
        platform-tag-and-runner-os: [
          ["manylinux_x86_64", "ubuntu-22.04"],
          ["manylinux_aarch64", "ubuntu-22.04"],
          ["macosx_x86_64", "macos-12-large"],
          ["macosx_arm64", "macos-13-large"],
          ["win_amd64", "windows-2022"]
        ]
      fail-fast: false
    uses: ./.github/workflows/cibuildwheel.yml
    with:
      platform-tag: ${{ matrix.platform-tag-and-runner-os[0] }}
      runner-os: ${{ matrix.platform-tag-and-runner-os[1] }}
      sha-to-build-override: ${{ inputs.sha-to-build-and-test-override }}
