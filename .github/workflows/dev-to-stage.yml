name: Stage tests

on:
  push:
    branches:
    - 'stage'
  workflow_dispatch:
    inputs:
      # For creating a backport client version
      server-tag:
        required: true
        default: 'latest'
        description: 'Server docker image tag'

jobs:
  promote-dev-build-to-rc:
    uses: ./.github/workflows/bump-version.yml
    with:
      change: 'promote-dev-build-to-rc'
    secrets:
      CLIENT_BOT_PAT: ${{ secrets.CLIENT_BOT_PAT }}

  run-stage-tests:
    needs: promote-dev-build-to-rc
    uses: ./.github/workflows/stage-tests.yml
    with:
      commit_sha: ${{ needs.promote-dev-build-to-rc.outputs.bump_sha }}
    secrets: inherit

  filter-artifacts:
    needs: run-stage-tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          .github/workflows/filter-artifacts.py
          .github/actions/dl-and-unwrap-artifacts
        sparse-checkout-cone-mode: false

    - uses: ./.github/actions/dl-and-unwrap-artifacts
      with:
        artifact-patterns: '-path "*.txt"'
        output-folder-name: matrix-outputs

    - name: Filter artifacts
      run: python3 filter-artifacts.py
      working-directory: ./.github/workflows/

    - run: |
        {
          echo 'bad_artifacts<<EOF'
          cat failed_artifacts.txt
          echo EOF
        } >> $GITHUB_OUTPUT
      id: bad-artifacts
      working-directory: ./.github/workflows/

    - name: Remove failed artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
        name: |
          ${{ steps.bad-artifacts.outputs.bad_artifacts }}

  upload-to-jfrog:
    name: Upload artifacts to JFrog
    needs: [
      promote-dev-build-to-rc,
      filter-artifacts
    ]
    uses: ./.github/workflows/upload-to-jfrog.yml
    with:
      new_version: ${{ needs.promote-dev-build-to-rc.outputs.new_version }}
    secrets:
      JFROG_PLATFORM_URL: ${{ secrets.JFROG_PLATFORM_URL }}
      JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
