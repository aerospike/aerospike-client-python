name: Stage tests

on:
  # Should be run from the dev branch usually
  workflow_dispatch:

jobs:
  get-latest-tag:
    outputs:
      latest-dev-version: ${{ steps.get-dev-version.outputs.latest-dev-version }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Get all tags
        fetch-depth: 0
    - name: Get latest dev version
      run: echo latest-dev-version=$(git describe --abbrev=0) >> $GITHUB_OUTPUT
      id: get-dev-version

  run-stage-tests:
    uses: ./.github/workflows/stage-tests.yml
    needs: get-latest-tag
    with:
      use-server-rc: false
      commit_sha: ${{ needs.get-latest-tag.outputs.latest-dev-version }}
    secrets: inherit

  filter-artifacts:
    if: ${{ !cancelled() }}
    needs: run-stage-tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          .github/workflows/filter-artifacts.py
        sparse-checkout-cone-mode: false

    - uses: actions/download-artifact@v4
      with:
        pattern: '*.txt'
        path: matrix-outputs
        merge-multiple: true

    - name: Filter artifacts
      run: python3 filter-artifacts.py
      working-directory: ./.github/workflows/

    - run: |
        {
          echo 'bad_artifacts<<EOF'
          cat failed_artifacts.txt
          echo EOF
        } >> $GITHUB_OUTPUT
      id: bad-artifacts
      working-directory: ./.github/workflows/

    - name: Remove failed artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
        name: |
          ${{ steps.bad-artifacts.outputs.bad_artifacts }}

  fast-forward-stage-to-dev:
    name: Fast forward stage to tested commit in dev
    needs: [
      filter-artifacts,
      get-latest-tag
    ]
    uses: ./.github/workflows/fast-forward-merge.yml
    with:
      branch_to_merge: ${{ needs.get-latest-tag.outputs.latest-dev-version }}
      base_branch: stage-test
    secrets: inherit

  promote-dev-build-to-rc:
    needs: fast-forward-stage-to-dev
    uses: ./.github/workflows/bump-version.yml
    with:
      change: 'promote-dev-build-to-rc'
    secrets:
      CLIENT_BOT_PAT: ${{ secrets.CLIENT_BOT_PAT }}

  upload-to-jfrog:
    needs: promote-dev-build-to-rc
    name: Upload artifacts to JFrog
    if: ${{ !cancelled() }}
    uses: ./.github/workflows/upload-to-jfrog.yml
    with:
      new_version: ${{ needs.promote-dev-build-to-rc.outputs.new_version }}
    secrets: inherit

  fast-forward-dev-to-stage:
    needs: promote-dev-build-to-rc
    uses: ./.github/workflows/fast-forward-merge.yml
    with:
      branch_to_merge: stage-test
      base_branch: dev-test
    secrets: inherit
