on:
  workflow_call:

jobs:
  download-and-test-wheel:
    strategy:
      fail-fast: false
      matrix:
        python: [
          ["cp38", "3.8"],
          ["cp39", "3.9"],
          ["cp310", "3.10"],
          ["cp311", "3.11"],
          ["cp312", "3.12"]
        ]
    runs-on: [self-hosted, Windows, X64]
    steps:
    - name: Show job status for commit
      uses: myrotvorets/set-commit-status-action@v2.0.0
      if: ${{ github.event_name != 'push' && github.event_name != 'pull_request' }}
      with:
        sha: ${{ github.sha }}
        context: "Test Windows (${{ matrix.python[0] }}-win_amd64)"
    - uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}

    - run: docker run -d -p 3000:3000 --name aerospike aerospike/aerospike-server
    - name: Download wheel
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.python[0] }}-win_amd64.build

    - name: Create config.conf
      run: cp config.conf.template config.conf
      working-directory: test

    - name: Install wheel
      run: python${{ matrix.python[1] }} -m pip install aerospike --force-reinstall --no-index --find-links=./
    - name: Connect to Docker container on remote machine with Docker daemon
      # DOCKER_HOST contains the IP address of the remote machine
      run: |
        python${{ matrix.python[1] }} -m pip install crudini==0.9.4
        $env:DOCKER_HOST_IP = $env:DOCKER_HOST | foreach {$_.replace("tcp://","")} | foreach {$_.replace(":2375", "")}
        python${{ matrix.python[1] }} -m crudini --set config.conf community-edition hosts ${env:DOCKER_HOST_IP}:3000
      working-directory: test

    - run: python${{ matrix.python[1] }} -m pip install pytest -c requirements.txt
      working-directory: test

    - run: python${{ matrix.python[1] }} -m pytest new_tests/
      working-directory: test

    - name: Show job status for commit
      if: ${{ always() && github.event_name != 'push' && github.event_name != 'pull_request' }}
      uses: myrotvorets/set-commit-status-action@v2.0.0
      with:
        sha: ${{ github.sha }}
        status: ${{ job.status }}
        context: "Test Windows (${{ matrix.python[0] }}-win_amd64)"
