name: Build and upload release artifacts to JFrog
on:
  workflow_dispatch:

jobs:
  fast_forward_master_to_stage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Fetch the whole history to prevent unrelated history errors
          fetch-depth: '0'
          # The branch you want to checkout (usually equal to `branchtomerge`)
          ref: 'stage'
      - name: Merge Fast Forward
        uses: MaximeHeckel/github-action-merge-fast-forward@v1.1.0
        with:
          # Branch to merge
          branchtomerge: stage
          # Branch that will be updated
          branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.CLIENT_BOT_PAT }}

  promote-rc-build-to-release:
    needs: fast_forward_master_to_stage
    uses: ./.github/workflows/bump-version.yml
    with:
      change: promote-rc-build-to-release

  build-artifacts:
    needs: promote-rc-build-to-release
    uses: ./.github/workflows/build-wheels.yml
    with:
      run_tests: false
      commit_sha: ${{ needs.promote-rc-build-to-release.outputs.bump_sha }}

  upload-to-jfrog:
    name: Upload artifacts to JFrog
    needs: build-artifacts
    uses: ./.github/workflows/upload-to-jfrog.yml
    with:
      new_version: ${{ needs.promote-rc-build-to-release.outputs.new_version }}
    secrets:
      JFROG_PLATFORM_URL: ${{ secrets.JFROG_PLATFORM_URL }}
      JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}

  publish-to-pypi:
    runs-on: ubuntu-latest
    needs: build-artifacts
    steps:
    - name: Download and store all artifacts to single folder
      run: ./.github/actions/dl-and-unwrap-artifacts

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: artifacts/
        password: ${{ secrets.PYPI_API_TOKEN }}
