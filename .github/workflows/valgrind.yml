name: Valgrind

on:
  workflow_dispatch:
    inputs:
      test-file:
        description: 'new_test/<test-file>'
        required: false
        default: ""
      use-server-rc:
        type: boolean
        description: 'Use server release candidate?'
        required: true
        default: false

jobs:
  build-manylinux-wheels:
    uses: ./.github/workflows/build-wheels.yml

  valgrind:
    needs: build-manylinux-wheels
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v5
      with:
        python-version: 'pypy3.9'
        architecture: 'x64'

    - uses: actions/download-artifact@v4
      with:
        name: pp39-manylinux_x86_64.build

    - name: Install client
      run: pip install ./*.whl

    - name: Install test dependencies
      run: pip install -r test/requirements.txt

    - name: Run EE server
      uses: ./.github/actions/run-ee-server
      with:
        use-server-rc: ${{ inputs.use-server-rc }}
        docker-hub-username: ${{ secrets.DOCKER_HUB_BOT_USERNAME }}
        docker-hub-password: ${{ secrets.DOCKER_HUB_BOT_PW }}

    - run: sudo apt update
    - run: sudo apt install valgrind -y

    # We want the latest version of valgrind
    # - name: Download valgrind source code
    #   run: wget https://sourceware.org/pub/valgrind/valgrind-3.21.0.tar.bz2

    # - name: Extract valgrind source code
    #   run: tar -xjvf valgrind-3.21.0.tar.bz2

    # - name: Compile valgrind (step 1)
    #   run: ./autogen.sh
    #   working-directory: valgrind-3.21.0

    # - name: Compile valgrind (step 2)
    #   run: ./configure
    #   working-directory: valgrind-3.21.0

    # - name: Compile valgrind (step 3)
    #   run: make
    #   working-directory: valgrind-3.21.0

    # - name: Compile valgrind (step 4)
    #   run: sudo make install
    #   working-directory: valgrind-3.21.0

    - run: PYTHONMALLOC=malloc valgrind --leak-check=full --error-exitcode=1 python3 -m pytest -v new_tests/${{ github.event.inputs.test-file }}
      working-directory: test
