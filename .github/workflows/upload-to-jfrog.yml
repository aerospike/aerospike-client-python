name: Upload to JFrog

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: false
      jfrog-repo-name:
        type: string
        required: false
        default: ${{ vars.JFROG_REPO_NAME }}
    secrets:
      JFROG_PLATFORM_URL:
        required: true
      JFROG_ACCESS_TOKEN:
        required: true

jobs:
  upload-to-jfrog:
    name: Upload artifacts to JFrog
    runs-on: ubuntu-22.04
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: '*.build'
        path: artifacts
        merge-multiple: ${{ inputs.jfrog-repo-name == vars.JFROG_GENERIC_REPO_NAME }}

    - name: Set up JFrog credentials
      uses: jfrog/setup-jfrog-cli@v3
      env:
        JF_URL: ${{ secrets.JFROG_PLATFORM_URL }}
        JF_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}

    - name: Upload manylinux builds from arbitrary branches to JFrog generic repo
      if: ${{ inputs.jfrog-repo-name == vars.JFROG_GENERIC_REPO_NAME }}
      run: jf rt upload "*manylinux*" ${{ vars.JFROG_GENERIC_REPO_NAME }}/${{ github.ref_name }}/
      working-directory: artifacts

    - name: Upload passing builds to JFrog PyPI repo
      if: ${{ inputs.jfrog-repo-name == vars.JFROG_REPO_NAME }}
      # Upload each artifact and tag each one with the matching cibuildwheel build identifier
      run: find . -type f -execdir jf rt upload --build-name python-client --build-number $NEW_VERSION --target-props "build_identifier=$(basename $(pwd))" {} ${{ vars.JFROG_REPO_NAME }}/aerospike/$NEW_VERSION/ \;
      env:
        NEW_VERSION: ${{ inputs.version }}

    - name: Publish build info
      if: ${{ inputs.jfrog-repo-name == vars.JFROG_REPO_NAME }}
      run: jf rt build-publish python-client ${{ inputs.version }}
